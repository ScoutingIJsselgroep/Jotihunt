name: Server Build & Push

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - "server/**"
      - "app/**"
      - "helpers/**"
      - "internals/**"
      - "seeders/**"
      - docker-compose.prod.yml
      - Dockerfile

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    environment: SERVER_ENV_PROD
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "${{ secrets.MYSQL_USER }}" >> .env
          echo "${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "${{ secrets.MYSQL_HOSTNAME }}" >> .env
          echo "${{ secrets.AUTH0_CLIENT_ID }}" >> .env
          echo "${{ secrets.AUTH0_DOMAIN }}" >> .env
          echo "${{ secrets.TELEGRAM_TOKEN }}" >> .env
          echo "${{ secrets.POLLER_INTERVAL_SECONDS }}" >> .env
          echo "${{ secrets.GOOGLE_SERVER_AUTH_TOKEN }}" >> .env
          echo "${{ secrets.GOOGLE_CLIENT_AUTH_TOKEN }}" >> .env
          echo "${{ secrets.API_URI }}" >> .env
          echo "${{ secrets.JOTIHUNT_USERNAME }}" >> .env
          echo "${{ secrets.JOTIHUNT_PASSWORD }}" >> .env
          echo "${{ secrets.CF_API_EMAIL }}" >> .env
          echo "${{ secrets.CF_API_KEY }}" >> .env
          echo "${{ secrets.C_COUNTER }}" >> .env
          echo "${{ secrets.HOST_URI }}" >> .env

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: tristandb/jotihunt:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Copy Docker Compose and Init configuration
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GL_SSH_HOST }}
          username: ${{ secrets.GL_SSH_USERNAME }}
          key: ${{ secrets.GL_SSH_SECRET }}
          passphrase: ${{ secrets.GL_SSH_PASSWORD }}
          port: ${{ secrets.GL_SSH_PORT }}
          source: "docker-compose.prod.yml,init.sh,.env"
          target: "jotihunt-prod"

      - name: Deploy Stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GL_SSH_HOST }}
          username: ${{ secrets.GL_SSH_USERNAME }}
          passphrase: ${{ secrets.GL_SSH_PASSWORD }}
          key: ${{ secrets.GL_SSH_SECRET }}
          port: ${{ secrets.GL_SSH_PORT }}
          script: |
            cd jotihunt-prod
            set -a
            . .env
            sh init.sh
